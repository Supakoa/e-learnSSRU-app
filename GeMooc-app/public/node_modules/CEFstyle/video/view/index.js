
if (video.type == 'youtube') {
    let videoId = getId(video.data);
    let iframeMarkup = 'https://www.youtube.com/embed/' + videoId;

    function getId(url) {
        var regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
        var match = url.match(regExp);

        if (match && match[2].length == 11) {
            return match[2];
        } else {
            return 'error';
        }
    }

    // set into src iframe
    $('#showVideo').attr('src', iframeMarkup);
}

// test send record
// function takeRecord() {
//     $("#recordItem").val(JSON.stringify(videoRecord));
// }

let videoIdSharp;
let action;

if (video.type == 'youtube') {
    console.log('youtube');
    videoIdSharp = '#player1';
    action = 'ready';
} else {
    console.log('file');
    videoIdSharp = '#player2';
    action = 'loadeddata';
}

let player = new Plyr(videoIdSharp);

$(document).ready(function () {
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });
});

$(videoIdSharp).on(action, function () {
    /**
        Omega magneto hello function
    */
    let i = j = 0;
    let iHaveTimer = false;
    console.log('player.duration :', Math.floor(player.duration));
    let buffer = new Array(Math.floor(player.duration));

    // creat new record bar
    for (let i = 0; i < buffer.length; i++) {
        var second = parseInt(i % 60);
        var minute = parseInt(i / 60);
        (second < 10) ? second = '0' + second: second;
        (minute < 10) ? minute = '0' + minute: minute;
        var newLi = document.createElement('div');
        newLi.className = 'recordSlot';
        newLi.style.width = ($(videoIdSharp).width()) / buffer.length + 'px';
        newLi.setAttribute('at_record', i);
        newLi.setAttribute('status', 'undefind');
        newLi.setAttribute('data-toggle', 'tooltip');
        newLi.setAttribute('data-placement', 'bottom');
        newLi.setAttribute('title', minute + ':' + second);
        newLi.onclick = function () {
            console.log('currentTime: ' + i);
            player.currentTime = i;
            click = true;
        }
        console.log('object :' + ($(videoIdSharp).width()));
        document.getElementById('navProgress').appendChild(newLi);
    }

    // new empty videoRecord
    let videoRecord = {
        "content_id": content.id,
        "user_id": userId,
        "record": buffer,
        "percent": 0,
    }

    // if have in old record will take to videoRecord
    if (issetRecord) {
        console.log('have record..');
        videoRecord = {
            "content_id": content.id,
            "user_id": userId,
            "record": JSON.parse(record.record),
            "percent": record.percent,
        }
        // take record to buffer
        buffer = JSON.parse(record.record);
        // console.log('videoRecord: ' + videoRecord.record[0] );
    }

    // oneRady start interval
    // $("body").on("ready", function () {
        console.log('ready..');

        // interval use for save videoRecorder to database
        setInterval(function () {
            $.post("/record", {
                    'muuwan': JSON.stringify(videoRecord)
                },
                function (data, textStatus, jqXHR) {
                    console.log('data callback: ' + JSON.parse(data).record);
                    JSON.parse(data).record.forEach(record => {
                        if (record != null) {
                            $('[at_record=' + record + ']').attr('status', 'save');
                        }
                    });
                },
            );
        }, 5000);

        // set css to recordSlot then have value because new node not use css file
        JSON.parse(record.record).forEach(record => {
            if (record != null) {
                $('[at_record=' + record + ']').attr('status', 'save');
            }
        });

    // });

    $("#player1, .recordSlot, #player2").on("play", function () {
        alert('4');
        console.log('fucking click..');

        // check have only one interval
        if (!iHaveTimer) {
            // get current time from player
            i = Math.floor(player.currentTime);

            // create new interval
            var timer = setInterval(function () {
                j = i;
                i = Math.floor(player.currentTime);

                // get val to videoRecord
                const tim = Math.floor(player.currentTime);
                buffer[tim] = tim;
                videoRecord.record = buffer;
                videoRecord.percent = Math.floor(((buffer.filter(String).length) / player.duration) * 100);

                // when stop player do clear interval
                if (!player.playing) {
                    console.log('stop..');
                    clearInterval(timer);
                    iHaveTimer = false;
                }

                if (JSON.parse(record.record)[i] == null) {
                    $('[at_record=' + i + ']').attr('status', 'unsave');
                }

                // i/o to show val
                console.log((i++) + " : " + j);
                // timer name
                // console.log(timer);
            }, 1000 / player.speed);

            // return to stop make new interval
            iHaveTimer = true;
        }
    });
});
